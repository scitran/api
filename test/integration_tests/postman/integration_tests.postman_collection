{
	"variables": [],
	"info": {
		"name": "test",
		"_postman_id": "de8315f8-0e87-1ede-cbd7-3a3d7dc77b39",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "/users",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": "tests[\"Status code is 200\"] = responseCode.code === 200;"
					}
				}
			],
			"request": {
				"url": "{{baseUri}}/users",
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Authorization",
						"value": "scitran-user {{test_user_api_key}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"_id\":\"jane.doe@gmail.com\",\"firstname\":\"Jane\",\"lastname\":\"Doe\",\"email\":\"jane.doe@gmail.com\"}"
				},
				"description": "List users\n\n"
			},
			"response": []
		},
		{
			"name": "/users missing required",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;\n\ntests[\"Body has validation error message\"] = responseBody.has(\"'firstname' is a required property\");"
					}
				}
			],
			"request": {
				"url": "{{baseUri}}/users?root=true",
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					},
					{
						"key": "Authorization",
						"value": "scitran-user {{test_user_api_key}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\"_id\":\"jane.doe@gmail.com\", \"lastname\":\"Doe\",\"email\":\"jane.doe@gmail.com\"}"
				},
				"description": "\n\n"
			},
			"response": []
		},
		{
			"name": "Test /engine upload - type \"analysis\"",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": "tests[\"Status code is 200\"] = responseCode.code === 200;"
					}
				}
			],
			"request": {
				"url": "{{baseUri}}/engine?&level=analysis&root=true&id=57ac736ca16b3e715b930200",
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "scitran-user {{test_user_api_key}}",
						"description": ""
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "file1",
							"type": "file",
							"enabled": true,
							"src": "test/integration_tests/postman/test_files/engine-analyses-1.txt",
							"value": ""
						},
						{
							"key": "metadata",
							"value": "{\"label\":\"test\"}",
							"type": "text",
							"enabled": true
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Create test-group",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Response time is less than 200ms\"] = responseTime < 200;"
					}
				}
			],
			"request": {
				"url": "{{baseUri}}/groups?root=true",
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "scitran-user {{test_user_api_key}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\"_id\":\"test-group\"\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Create test-project",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Response time is less than 200ms\"] = responseTime < 200;\n\nvar jsonData = JSON.parse(responseBody);\n\npostman.setGlobalVariable(\"test-project-id\", jsonData._id);"
					}
				}
			],
			"request": {
				"url": "{{baseUri}}/projects",
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "scitran-user {{test_user_api_key}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "  {\n    \"group\": \"test-group\",\n    \"label\": \"test-project\",\n    \"public\": false\n  }"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Create test-session-1",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Response time is less than 200ms\"] = responseTime < 200;\n\nvar jsonData = JSON.parse(responseBody);\n\npostman.setGlobalVariable(\"test-session-id\", jsonData._id);"
					}
				}
			],
			"request": {
				"url": "{{baseUri}}/sessions?root=true",
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "scitran-user {{test_user_api_key}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "  {\n    \"subject\": {\n      \"code\": \"test-subject-1\"\n    },\n    \"label\": \"test-session-1\",\n    \"project\": \"{{test-project-id}}\",\n    \"public\": false\n  }"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Create test-acquisition-1",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Response time is less than 200ms\"] = responseTime < 200;\n\nvar jsonData = JSON.parse(responseBody);\n\npostman.setGlobalVariable(\"test-acquisition-id\", jsonData._id);"
					}
				}
			],
			"request": {
				"url": "{{baseUri}}/acquisitions?root=true",
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "scitran-user {{test_user_api_key}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"label\": \"test-acquisition-1\",\n    \"session\":\"{{test-session-id}}\",\n    \"public\": false\n }"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Upload file to test-acquisition-1",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Response time is less than 200ms\"] = responseTime < 200;\n\nvar jsonData = JSON.parse(responseBody);\ntests[\"Upload complte\"] = jsonData[0].name === \"test-1.dcm\";"
					}
				}
			],
			"request": {
				"url": "{{baseUri}}/upload/label?root=true",
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "scitran-user {{test_user_api_key}}",
						"description": ""
					}
				],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "metadata",
							"value": "{\"group\": {\"_id\": \"{{test-group-id}}\"}, \"project\": {\"label\": \"test-project-1\"}, \"session\":{\"label\":\"test-session-1\"}, \"acquisition\":{\"label\":\"test-acquisition-1\", \"files\":[{\"name\":\"test-1.dcm\"}]}}",
							"type": "text",
							"enabled": true
						},
						{
							"key": "file",
							"src": "test/integration_tests/postman/test_files/test-1.dcm",
							"type": "file",
							"enabled": true,
							"value": ""
						}
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Submit invalid gear",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": "tests[\"Status code is 400\"] = responseCode.code === 400;"
					}
				}
			],
			"request": {
				"url": "{{baseUri}}/gears/test_gear?root=true",
				"method": "post",
				"header": [
					{
						"key": "Authorization",
						"value": "scitran-user {{test_user_api_key}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"category\": \"converter\",\n\t\"input\": { },\n\t\"name\": \"test_gear\",\n\t\"manifest\": {\n\t\t\"name\": \"test_gear\",\n\t\t\"inputs\": {\n\t\t\t\"any text file <= 100 KB\": {\n\t\t\t\t\"base\": \"file\",\n\t\t\t\t\"name\": {\n\t\t\t\t\t\"pattern\": \"^.*.txt$\"\n\t\t\t\t},\n\t\t\t\t\"size\": {\n\t\t\t\t\t\"maximum\": 100000\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t\"description\": \"A gear to test the API\",\n\t\t\"license\": \"Other\",\n\t\t\"author\": \"\",\n\t\t\"url\": \"https://unknown.example\",\n\t\t\"label\": \"An exported gear\",\n\t\t\"source\": \"https://unknown.example\",\n\t\t\"config\": {\n\t\t\t\"two-digit multiple of ten\": {\n\t\t\t\t\"exclusiveMaximum\": true,\n\t\t\t\t\"type\": \"number\",\n\t\t\t\t\"multipleOf\": 10,\n\t\t\t\t\"maximum\": 100\n\t\t\t}\n\t\t}\n\t}\n}"
				},
				"description": "Create or update a gear.\n\"Name\" field of gear must match \"GearName\" uri parameter\nIf no existing gear is found, one will be created\nOtherwise, the specified gear will be updated\n\n\nParameters:\n\nGearName: Name of the gear to interact with\n\n"
			},
			"response": []
		},
		{
			"name": "Add test-case-gear gear",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Response time is less than 200ms\"] = responseTime < 200;"
					}
				}
			],
			"request": {
				"url": "{{baseUri}}/gears/test-case-gear?root=true",
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "scitran-user {{test_user_api_key}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"name\": \"test-case-gear\",\n\t\"manifest\": {\n\t\t\"name\": \"test-case-gear\",\n\t\t\"label\": \"Test Case Gear\",\n\t\t\"version\": \"0\",\n\t\t\n\t\t\"author\": \"Nathaniel Kofalt\",\n\t\t\"description\": \"A gear built to drive test cases\",\n\t\t\n\t\t\"url\":     \"http://none.example\",\n\t\t\"source\":  \"http://none.example\",\n\t\t\"license\": \"MIT\",\n\t\t\n\t\t\"config\": {\n\t\t\t\"two-digit multiple of ten\": {\n\t\t\t\t\"exclusiveMaximum\": true,\n\t\t\t\t\"type\": \"number\",\n\t\t\t\t\"multipleOf\": 10,\n\t\t\t\t\"maximum\": 100\n\t\t\t}\n\t\t},\n\t\t\n\t\t\"inputs\": {\n\t\t\t\"any text file <= 100 KB\": {\n\t\t\t\t\"base\": \"file\",\n\t\t\t\t\"name\": {\n\t\t\t\t\t\"pattern\": \"^.*.txt$\"\n\t\t\t\t},\n\t\t\t\t\"size\": {\n\t\t\t\t\t\"maximum\": 100000\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t\"input\": {\n\t\t\"uri\":\"https://somewhere.notarealtopleveldomain/gears/foo.tar.gz\",\n\t\t\"type\":\"http\",\n\t\t\"location\":\"/\",\n\t\t\"vu\": \"vu0:sha384:tXvdI2pspng-YH6lwa2UcLsww0yR6LfEKbLm89eIqEGicLRHW9d1V8bs7gXHTlZ3\"\n\t}\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Add job",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Response time is less than 200ms\"] = responseTime < 200;"
					}
				}
			],
			"request": {
				"url": "{{baseUri}}/jobs/add",
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "scitran-user {{test_user_api_key}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"gear\": \"test-case-gear\",\n    \"inputs\": {\n        \"dicom\": {\n            \"type\": \"acquisition\",\n            \"id\": \"{{test-acquisition-id}}\",\n            \"name\" : \"1_1_dicom.zip\"\n        }\n    },\n    \"config\": {\n\t\t\"two-digit multiple of ten\": 20\n\t},\n    \"destination\": {\n        \"type\": \"acquisition\",\n        \"id\": \"{{test-acquisition-id}}\"\n    },\n    \"tags\": [\n        \"ad-hoc\"\n    ]\n}\n"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Create test-collection-1",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Response time is less than 200ms\"] = responseTime < 200;\n\nvar jsonData = JSON.parse(responseBody);\n\npostman.setGlobalVariable(\"test-collection-id\", jsonData._id);"
					}
				}
			],
			"request": {
				"url": "{{baseUri}}/collections",
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "scitran-user {{test_user_api_key}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"label\":\"test-collection-1\"\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Add test-session-1 to test-collection-1",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Response time is less than 200ms\"] = responseTime < 200;"
					}
				}
			],
			"request": {
				"url": "{{baseUri}}/collections/{{test-collection-id}}",
				"method": "PUT",
				"header": [
					{
						"key": "Authorization",
						"value": "scitran-user {{test_user_api_key}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"contents\":{\n    \t\"operation\":\"add\",\n    \t\"nodes\":[\n    \t\t{\n    \t\t\t\"level\":\"session\",\n    \t\t\t\"_id\":\"{{test-session-id}}\"\n    \t\t}\n    \t]\n    }\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Create test-collection-2",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": "tests[\"Status code is 200\"] = responseCode.code === 200;\n\ntests[\"Response time is less than 200ms\"] = responseTime < 200;"
					}
				}
			],
			"request": {
				"url": "{{baseUri}}/collections",
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"value": "scitran-user {{test_user_api_key}}",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"label\":\"test-collection-2\"\n}"
				},
				"description": ""
			},
			"response": []
		}
	]
}